// <auto-generated />
using System;
using Data_layer.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data_layer.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data_layer.Model.Adres", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bus");

                    b.Property<string>("Gemeente");

                    b.Property<string>("Land");

                    b.Property<int>("Postcode");

                    b.Property<string>("Straat");

                    b.Property<int>("Straatnummer");

                    b.HasKey("ID");

                    b.ToTable("Adres");
                });

            modelBuilder.Entity("Data_layer.Model.Bestelling", b =>
                {
                    b.Property<int>("BestellingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DrinkTijdKlaar");

                    b.Property<bool>("DrinkenGereed");

                    b.Property<bool>("DrinkenStatus");

                    b.Property<string>("EetTijdKlaar");

                    b.Property<bool>("EtenGereed");

                    b.Property<bool>("EtenStatus");

                    b.Property<string>("GebruikersID");

                    b.Property<DateTime>("HuidigeTijd");

                    b.Property<int?>("RestaurantId");

                    b.Property<int>("TafelNr");

                    b.HasKey("BestellingId");

                    b.HasIndex("GebruikersID");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Bestellingen");
                });

            modelBuilder.Entity("Data_layer.Model.Factuur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Betaald");

                    b.Property<DateTime>("Datum");

                    b.Property<string>("GebruikersID");

                    b.Property<int?>("RestaurantId");

                    b.Property<int>("TafelNr");

                    b.HasKey("Id");

                    b.HasIndex("GebruikersID");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Facturen");
                });

            modelBuilder.Entity("Data_layer.Model.Gebruiker", b =>
                {
                    b.Property<string>("GebruikersID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("GetFactuurByEmail");

                    b.HasKey("GebruikersID");

                    b.ToTable("Gebruikers");
                });

            modelBuilder.Entity("Data_layer.Model.Menu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ID");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Data_layer.Model.Openingsuren", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dinsdag");

                    b.Property<string>("Donderdag");

                    b.Property<string>("Maandag");

                    b.Property<string>("Vrijdag");

                    b.Property<string>("Woensdag");

                    b.Property<string>("Zaterdag");

                    b.Property<string>("Zondag");

                    b.HasKey("ID");

                    b.ToTable("Openingsuren");
                });

            modelBuilder.Entity("Data_layer.Model.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Aantal");

                    b.Property<int?>("BestellingId");

                    b.Property<int?>("BestellingId1");

                    b.Property<int?>("FactuurId");

                    b.Property<int?>("MenuID");

                    b.Property<int?>("MenuID1");

                    b.Property<int?>("MenuID2");

                    b.Property<int?>("MenuID3");

                    b.Property<string>("Naam");

                    b.Property<double>("Prijs");

                    b.HasKey("ProductId");

                    b.HasIndex("BestellingId");

                    b.HasIndex("BestellingId1");

                    b.HasIndex("FactuurId");

                    b.HasIndex("MenuID");

                    b.HasIndex("MenuID1");

                    b.HasIndex("MenuID2");

                    b.HasIndex("MenuID3");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Data_layer.Model.Reservatie", b =>
                {
                    b.Property<int>("ReservatieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AantalPersonen");

                    b.Property<string>("Datum");

                    b.Property<string>("Email");

                    b.Property<string>("Naam");

                    b.Property<int?>("RestaurantId");

                    b.Property<int>("TafelNr");

                    b.Property<string>("TelefoonNummer");

                    b.Property<string>("Tijdstip");

                    b.Property<string>("UserId");

                    b.HasKey("ReservatieId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Reservaties");
                });

            modelBuilder.Entity("Data_layer.Model.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GebruikersID");

                    b.Property<string>("Gerechten");

                    b.Property<bool>("IsAdvertentie");

                    b.Property<string>("KorteBeschrijving");

                    b.Property<string>("LangeBeschrijving");

                    b.Property<int>("LocatieID");

                    b.Property<string>("LogoImage");

                    b.Property<int>("MenuID");

                    b.Property<string>("Naam");

                    b.Property<int?>("OpeningsurenID");

                    b.Property<string>("Soort");

                    b.Property<string>("Type");

                    b.HasKey("RestaurantId");

                    b.HasIndex("GebruikersID");

                    b.HasIndex("LocatieID");

                    b.HasIndex("MenuID");

                    b.HasIndex("OpeningsurenID");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("Data_layer.Model.Sessie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GebruikersID");

                    b.Property<int?>("RestaurantId");

                    b.Property<int>("TafelNr");

                    b.HasKey("Id");

                    b.HasIndex("GebruikersID");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Sessies");
                });

            modelBuilder.Entity("Data_layer.Model.Tafel", b =>
                {
                    b.Property<int>("TafelID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RestaurantId");

                    b.Property<int>("TafelNr");

                    b.Property<int>("UrenBezet");

                    b.Property<int>("Zitplaatsen");

                    b.HasKey("TafelID");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Tafel");
                });

            modelBuilder.Entity("Data_layer.Model.Tijdsmoment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Datum");

                    b.Property<int?>("TafelID");

                    b.Property<string>("Tot");

                    b.Property<string>("Van");

                    b.HasKey("ID");

                    b.HasIndex("TafelID");

                    b.ToTable("Tijdsmoment");
                });

            modelBuilder.Entity("Data_layer.Model.Uitbater", b =>
                {
                    b.Property<string>("GebruikersID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RestaurantId");

                    b.HasKey("GebruikersID");

                    b.ToTable("Uitbaters");
                });

            modelBuilder.Entity("Data_layer.Model.Bestelling", b =>
                {
                    b.HasOne("Data_layer.Model.Gebruiker", "Gebruiker")
                        .WithMany("Bestellingen")
                        .HasForeignKey("GebruikersID");

                    b.HasOne("Data_layer.Model.Restaurant", "Restaurant")
                        .WithMany("Bestellingen")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("Data_layer.Model.Factuur", b =>
                {
                    b.HasOne("Data_layer.Model.Gebruiker", "Gebruiker")
                        .WithMany()
                        .HasForeignKey("GebruikersID");

                    b.HasOne("Data_layer.Model.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("Data_layer.Model.Product", b =>
                {
                    b.HasOne("Data_layer.Model.Bestelling")
                        .WithMany("Dranken")
                        .HasForeignKey("BestellingId");

                    b.HasOne("Data_layer.Model.Bestelling")
                        .WithMany("Etenswaren")
                        .HasForeignKey("BestellingId1");

                    b.HasOne("Data_layer.Model.Factuur")
                        .WithMany("Producten")
                        .HasForeignKey("FactuurId");

                    b.HasOne("Data_layer.Model.Menu")
                        .WithMany("Desserts")
                        .HasForeignKey("MenuID");

                    b.HasOne("Data_layer.Model.Menu")
                        .WithMany("Dranken")
                        .HasForeignKey("MenuID1");

                    b.HasOne("Data_layer.Model.Menu")
                        .WithMany("Hoofdgerechten")
                        .HasForeignKey("MenuID2");

                    b.HasOne("Data_layer.Model.Menu")
                        .WithMany("Voorgerechten")
                        .HasForeignKey("MenuID3");
                });

            modelBuilder.Entity("Data_layer.Model.Reservatie", b =>
                {
                    b.HasOne("Data_layer.Model.Restaurant", "Restaurant")
                        .WithMany("Reservaties")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("Data_layer.Model.Restaurant", b =>
                {
                    b.HasOne("Data_layer.Model.Gebruiker")
                        .WithMany("Favorieten")
                        .HasForeignKey("GebruikersID");

                    b.HasOne("Data_layer.Model.Adres", "Locatie")
                        .WithMany()
                        .HasForeignKey("LocatieID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data_layer.Model.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data_layer.Model.Openingsuren", "Openingsuren")
                        .WithMany()
                        .HasForeignKey("OpeningsurenID");
                });

            modelBuilder.Entity("Data_layer.Model.Sessie", b =>
                {
                    b.HasOne("Data_layer.Model.Gebruiker", "Gebruiker")
                        .WithMany("Sessies")
                        .HasForeignKey("GebruikersID");

                    b.HasOne("Data_layer.Model.Restaurant", "Restaurant")
                        .WithMany("Sessies")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("Data_layer.Model.Tafel", b =>
                {
                    b.HasOne("Data_layer.Model.Restaurant")
                        .WithMany("Tafels")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("Data_layer.Model.Tijdsmoment", b =>
                {
                    b.HasOne("Data_layer.Model.Tafel")
                        .WithMany("BezetteMomenten")
                        .HasForeignKey("TafelID");
                });
#pragma warning restore 612, 618
        }
    }
}
